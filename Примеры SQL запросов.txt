WITH temp_cnt_days AS (SELECT user_id,
		DATE_TRUNC('day', creation_date) AS dt,
		COUNT(user_id) OVER (PARTITION BY DATE_TRUNC('day', creation_date)) AS cnt_at_day
	FROM stackoverflow.posts
	WHERE DATE_TRUNC('day', creation_date) BETWEEN '2008.12.01' AND '2008.12.07' --включительно
	GROUP BY  user_id, DATE_TRUNC('day', creation_date)),
    temp_activ_days AS (SELECT user_id,
        COUNT(user_id) AS activ_days
    FROM temp_cnt_days
    GROUP BY user_id)

SELECT ROUND(AVG(activ_days), 0)
FROM temp_activ_days







WITH main_temp AS (SELECT EXTRACT(MONTH FROM creation_date) AS month,
		COUNT(id) AS cnt
	FROM stackoverflow.posts
	WHERE DATE_TRUNC('month', creation_date)>='2008.09.01'
	GROUP BY month
	ORDER BY month)
	
SELECT *, 
	ROUND((cnt - LAG(cnt) OVER ())::numeric / LAG(cnt) OVER () *100, 2) AS change_percent
FROM main_temp







WITH top_user AS (SELECT user_id, --  получаем id пользователя кто больше всего опубликовал постов ща все время
		COUNT (*) AS cnt
	FROM stackoverflow.posts
	GROUP BY user_id 
	ORDER BY cnt DESC
	LIMIT 1
			),
	temp_clean AS (SELECT EXTRACT(WEEK FROM creation_date) AS week, --интересный момент, последняя/первая неделя в году не совпадает с концом года 
		MAX(creation_date) OVER (PARTITION BY EXTRACT(WEEK FROM creation_date)) AS max_dt
	FROM top_user AS tu
    INNER JOIN stackoverflow.posts AS pst ON pst.user_id=tu.user_id
    WHERE DATE_TRUNC('month', creation_date) = '2008.10.01')


SELECT week,
    max_dt
FROM temp_clean
GROUP BY week, max_dt






WITH temp AS (SELECT DISTINCT pst.user_id,
		MIN(pst.creation_date) OVER (PARTITION BY pst.user_id) AS date_post,
		u.creation_date AS dt_reg
	FROM stackoverflow.posts AS pst
	INNER JOIN stackoverflow.users AS u ON u.id=pst.user_id) --получаем таблицу с пользователями, датой поста и датой регистрации

SELECT user_id,
date_post - dt_reg AS delta
FROM temp   





WITH temp AS (SELECT DISTINCT EXTRACT(DAY FROM creation_date) AS n_day,
        COUNT(id) OVER (PARTITION BY EXTRACT(DAY FROM creation_date)) AS cnt_day
    FROM stackoverflow.users
    WHERE DATE_TRUNC('month', creation_date)='2008.11.01'
  --  GROUP BY EXTRACT(DAY FROM creation_date)
)

SELECT *,
    SUM(cnt_day) OVER (ORDER BY n_day)
FROM temp






WITH temp AS (SELECT id,
    views,
        CASE 
             WHEN views>=350 THEN 1
             WHEN views>=100 THEN 2
             ELSE 3
        END AS rank_profile
    FROM stackoverflow.users
    WHERE location LIKE '%Canad%' AND views>0
                                            ),
    temp_max AS (SELECT *,
        MAX(views) OVER (PARTITION BY rank_profile) AS max_views
    FROM temp)
                 
SELECT id,
    rank_profile,
    views
FROM temp_max
WHERE views=max_views
ORDER BY views DESC, rank_profile, id





WITH cnt_temp AS (SELECT user_id,
        COUNT(user_id) AS cnt_budges
    FROM stackoverflow.badges 
    WHERE DATE_TRUNC('day', creation_date) BETWEEN '2008.11.15' AND '2008.12.15' --даты включительно т.к. используем date_trunc
    GROUP BY user_id)

SELECT *,
    DENSE_RANK() OVER (ORDER BY cnt_budges DESC) AS rnk
FROM cnt_temp
ORDER BY cnt_budges DESC, rnk, user_id
LIMIT 10






SELECT *,
    RANK() OVER (ORDER BY id DESC) AS rank
FROM stackoverflow.vote_types
ORDER BY id






SELECT COUNT(DISTINCT pt.id)
FROM stackoverflow.posts AS pt
INNER JOIN stackoverflow.votes AS v ON v.post_id=pt.id
WHERE pt.user_id = (SELECT id AS user_id
               FROM stackoverflow.users
               WHERE display_name='Joel Coehoorn') --находим id нужного пользователя





